<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="OFF">

    <!--日志级别-->
    <!-- ALL < TRACE < DEBUG < INFO < WARN < ERROR < FETAL < OFF -->

    <Properties>
        <Property name="LOG.PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %c{1.} @%L %X{requestId} - %msg%n</Property>

        <!--spring cloud有心跳日志，debug级别的。这种日志一直在刷，很烦。所以把这一类日志单独放到一个log文件里面去-->
        <!--<Property name="LOG.REGEX.FILTER">.*((DiscoveryClient)|(PollingServerListUpdater)|(Eureka)|(Feign))+.*</Property>-->
    </Properties>

    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <!-- 只输出 INFO WARN ERROR FETAL 级别的日志-->
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG.PATTERN}"/>
        </Console>

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="DebugRollingFileWithoutSpringCloud" fileName="${sys:log.root.path:-./log}/app.debug.log"
                     filePattern="${sys:log.root.path:-./log}/$${date:yyyy-MM}-debug/%d{yyyy-MM-dd}-%i.log.gz">
            <!--只保留DEBUG级别的日志-->
            <Filters>
                <!-- 对于 INFO WARN ERROR FETAL 级别的日志，直接拒绝。对于 TRACE DEBUG 级别的，交给第二个过滤器处理 -->
                <ThresholdFilter level="INFO" onMatch="DENY" onMismatch="NEUTRAL"/>
                <!-- 对于过了第一个过滤器的日志（即 TRACE DEBUG），只接受DEBUG，拒绝TRACE-->
                <!--<ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>-->
                <ThresholdFilter level="DEBUG" onMatch="NEUTRAL" onMismatch="DENY"/>
                <!--这两个过滤器一起工作，保证了 app.debug.log文件只保留了 DEBUG级别的日志-->

                <!--SpringCloudPlugin 哪来的？见 com.yunhuakeji.component.logger.plugin.SpringCloudPlugin-->
                <SpringCloudPlugin onMatch="DENY" onMismatch="ACCEPT"/>
            </Filters>
            <PatternLayout pattern="${LOG.PATTERN}"/>
            <!-- 怎么配置Policies？参见 http://logging.apache.org/log4j/2.x/manual/appenders.html -->
            <Policies>
                <!--<OnStartupTriggeringPolicy />-->
                <SizeBasedTriggeringPolicy size="20 MB" />
                <TimeBasedTriggeringPolicy />
            </Policies>
            <!--为什么加这个配置？ 参见 https://blog.csdn.net/zhang168/article/details/46814489 文末-->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="DebugRollingFileWithSpringCloud" fileName="${sys:log.root.path:-./log}/app.debug.springcloud.log"
                     filePattern="${sys:log.root.path:-./log}/$${date:yyyy-MM}-debug/%d{yyyy-MM-dd}-%i.springcloud.log.gz">
            <!--只保留DEBUG级别的日志-->
            <Filters>
                <!-- 对于 INFO WARN ERROR FETAL 级别的日志，直接拒绝。对于 TRACE  DEBUG 级别的，交给第二个过滤器处理-->
                <ThresholdFilter level="INFO" onMatch="DENY" onMismatch="NEUTRAL"/>
                <!-- 对于过了第一个过滤器的日志（即 TRACE DEBUG），只接受DEBUG，拒绝TRACE-->
                <!--<ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>-->
                <ThresholdFilter level="DEBUG" onMatch="NEUTRAL" onMismatch="DENY"/>
                <!--这两个过滤器一起工作，保证了 app.debug.log文件只保留了 DEBUG级别的日志-->

                <SpringCloudPlugin onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="${LOG.PATTERN}"/>
            <Policies>
                <!--<OnStartupTriggeringPolicy />-->
                <SizeBasedTriggeringPolicy size="20 MB" />
                <TimeBasedTriggeringPolicy />
            </Policies>
            <!--为什么加这个配置？ 参见 https://blog.csdn.net/zhang168/article/details/46814489 文末-->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>


        <RollingFile name="WarnRollingFileWithSlowSql" fileName="${sys:log.root.path:-./log}/app.warn.slowsql.log"
                     filePattern="${sys:log.root.path:-./log}/$${date:yyyy-MM}-warn/%d{yyyy-MM-dd}-%i.slowsql.log.gz">
            <!--只保留Warn级别的日志-->
            <Filters>
                <ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="WARN" onMatch="NEUTRAL" onMismatch="DENY"/>
                <!--SlowSqlPlugin怎么来的？参考 com.yunhuakeji.component.logger.plugin.SlowSqlPlugin-->
                <SlowSqlPlugin onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="${LOG.PATTERN}"/>
            <Policies>
                <!--<OnStartupTriggeringPolicy />-->
                <SizeBasedTriggeringPolicy size="20 MB" />
                <TimeBasedTriggeringPolicy />
            </Policies>
            <!--为什么加这个配置？ 参见 https://blog.csdn.net/zhang168/article/details/46814489 文末-->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>


        <RollingFile name="InfoRollingFile" fileName="${sys:log.root.path:-./log}/app.info.log"
                     filePattern="${sys:log.root.path:-./log}/$${date:yyyy-MM}-info/%d{yyyy-MM-dd}-%i.log.gz">

            <Filters>
                <!--<ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>-->
                <ThresholdFilter level="INFO" onMatch="NEUTRAL" onMismatch="DENY"/>
                <!--SlowSqlPlugin怎么来的？参考 com.yunhuakeji.component.logger.plugin.SlowSqlPlugin-->
                <SlowSqlPlugin onMatch="DENY" onMismatch="ACCEPT"/>
            </Filters>

            <PatternLayout pattern="${LOG.PATTERN}"/>
            <Policies>
                <!--<OnStartupTriggeringPolicy />-->
                <SizeBasedTriggeringPolicy size="20 MB" />
                <TimeBasedTriggeringPolicy />
            </Policies>
            <!--为什么加这个配置？ 参见 https://blog.csdn.net/zhang168/article/details/46814489 文末-->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>


        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="ErrorRollingFile" fileName="${sys:log.root.path:-./log}/app.error.log"
                     filePattern="${sys:log.root.path:-./log}/$${date:yyyy-MM}-error/%d{yyyy-MM-dd}-%i.log.gz">
            <!--只保留ERROR级别的日志-->
            <Filters>
                <!-- 对于 FETAL 级别的日志，直接拒绝。对于 DEBUG  INFO  WARN ERROR 级别的，交给第二个过滤器处理-->
                <ThresholdFilter level="FETAL" onMatch="DENY" onMismatch="NEUTRAL"/>
                <!-- 对于过了第一个过滤器的日志（即 DEBUG  INFO  WARN ERROR），只接受ERROR，拒绝DEBUG  INFO  WARN-->
                <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
                <!--这两个过滤器一起工作，保证了 app.error.log文件只保留了 ERROR 级别的日志-->
            </Filters>
            <PatternLayout pattern="${LOG.PATTERN}"/>
            <Policies>
                <!--<OnStartupTriggeringPolicy />-->
                <SizeBasedTriggeringPolicy size="20 MB" />
                <TimeBasedTriggeringPolicy />
            </Policies>
            <!--为什么加这个配置？ 参见 https://blog.csdn.net/zhang168/article/details/46814489 文末-->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>

    </Appenders>
    <Loggers>
        <Root level="DEBUG">
            <appender-ref ref="DebugRollingFileWithoutSpringCloud"/>
            <appender-ref ref="DebugRollingFileWithSpringCloud"/>
            <appender-ref ref="WarnRollingFileWithSlowSql"/>
            <appender-ref ref="Console"/>
            <appender-ref ref="InfoRollingFile"/>
            <appender-ref ref="ErrorRollingFile"/>
        </Root>
    </Loggers>
</Configuration>